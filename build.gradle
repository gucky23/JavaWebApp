/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'gucky' at '16/01/10 20:15' with Gradle 2.10
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
subprojects {

	repositories {
		// Use 'jcenter' for resolving your dependencies.
		// You can declare any Maven/Ivy/file repository here.
		jcenter()
	}
}

project(':app') {
	apply plugin: 'war'
	
	dependencies {
		compile project(':data-model')
		compile project(':logic')
	
	    // The production code uses the SLF4J logging API at compile time
	    compile 'org.slf4j:slf4j-api:1.7.13'
		compile 'ch.qos.logback:logback-classic:1.1.3'
	    compile 'org.glassfish.jersey.core:jersey-server:2.13'
	    compile 'org.glassfish.jersey.containers:jersey-container-jdk-http:2.13'
		compile 'com.sun.faces:jsf-api:2.2.12'
	
	    // Declare the dependency for your favourite test framework you want to use in your tests.
	    // TestNG is also supported by the Gradle Test task. Just change the
	    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	    // 'test.useTestNG()' to your build script.
	    testCompile 'junit:junit:4.12'
	    testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jdk-http:2.13'
	}
}
